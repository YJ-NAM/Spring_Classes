#JDBC (Java DataBase Connectivity)

	- JDBC는 DB에 접근할 수 있도록 Java에서 제공하는 API임.
	- JDBC는 데이터베이스에서 자료를 쿼리하거나 업데이트 하는 방법을 제공합.
	- JDBC API의 문제점.
1. 쿼리를 실행하기 전과 후에 많은 양의 코드를 작성해야 함.
예) 오라클 드라이버 로딩, DB와 연결 생성, 명령문(쿼리문), Resultset 객체 연결, 연결 객체 닫기 등등
2. 데이터베이스 로직에서 예외 처리 코드를 수행해야 함.
3. 1과 2의 코드를 메소드 호출 시 마다 반복적으로 작성해야 한다.

#Spring JDBCTemplate?
	- JDBCTemplate dms Spring JDBC 접근 방법 중 하나이다.
	- 내부적으로 JDBC API를 사용하지만, 위의 내용과 같은 문제점을 제거한 형태로 Spring에서 제공하는 클래스임.
※ Spring JDBC가 하는 일.
	- Connection 열기와 닫기.
	- Preparedstatement 준비와 닫기.
	- PreparedStatement 실행
	- Resultset Loop 처리
	- Transaction 처리

- Spring JDBC에서 개발자가 핵심적으로 해야 할 작업만 해주면 나머지는 Spring Framework에서 알아서 처리해준다.

# DataSource?
	- DataSource는 JDBC명세서의 일부분이면서 일반적으로 DB연결 공장. 즉, DB와 관련된 Connection(DBCP방식) 정보를 담고있다.

* DB종류(oracle.jdbc.driver.OracleDriver)
* url 정보(jdbc:oracle:thin:@localhost:1521:XE)
* 계정 정보(web)
* 계정 비밀번호 정보(1234)

#Spring JDBCTemplate 클래스를 사용하기 위해서는 pom.xml파일에 아래와 같은 라이브러리를 추가해 주어야 한다.
	*spring-jdbc라이브러리
	* commons-dbcp 라이브러리